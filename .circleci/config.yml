version: 2.1

aliases:
  - &docker
    - image: circleci/openjdk:8-jdk-node-browsers

  - &environment
    TZ: /usr/share/zoneinfo/America/Los_Angeles

  - &restore_yarn_cache
    restore_cache:
      name: Restore node_modules cache
      keys:
        - v2-node-{{ arch }}-{{ .Branch }}-{{ checksum "yarn.lock" }}
        - v2-node-{{ arch }}-{{ .Branch }}-
        - v2-node-{{ arch }}-
        
  - &run_yarn
    run:
      name: Install Packages
      command: yarn --frozen-lockfile

jobs:
  setup:
    docker: *docker
    environment: *environment

    steps:
      - checkout
      - run:
          name: Nodejs Version
          command: node --version
      - *restore_yarn_cache
      - *run_yarn
      - save_cache:
          name: Save node_modules cache
          key: v2-node-{{ arch }}-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

  lint:
    docker: *docker
    environment: *environment

    steps:
      - checkout
      - *restore_yarn_cache
      - *run_yarn
      - run: node ./scripts/tasks/prettier
      - run: node ./scripts/tasks/eslint


  test:
    docker: *docker
    environment: *environment
    steps:
      - checkout
      - *restore_yarn_cache
      - *run_yarn
      - run:
          command: yarn test --maxWorkers=2

  build:
    docker: *docker
    environment: *environment
    parallelism: 20
    steps:
      - checkout
      - *restore_yarn_cache
      - *run_yarn
      - run:
          command: yarn build
      - persist_to_workspace:
          root: build
          paths:
            - node_modules
            - dist
  deploy:
    - build
      - heroku/deploy-via-git
      requires:
        - build # only run deploy-via-git job if the build job has completed
      filters:
        branches:
          only: master # only run deploy-via-git job on master branch

workflows:
  version: 2
  stable:
    jobs:
      - setup
      - lint:
          requires:
            - setup
      - build:
          requires:
            - setup
      - test:
          requires:
            - setup

  heroku_deploy:
    jobs:
      - deploy

orbs:
  heroku: circleci/heroku@x.y # Use the Heroku orb in your config
